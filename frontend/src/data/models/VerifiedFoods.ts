// VerifiedFoods: lista curada inicial para poblar la base de datos de alimentos.
/*Datos nutricionales sacados de USDA foodData central 2024*/
export interface VerifiedFood {
    id: string;
    name: string;
    calories: number;
    serving: string;
    usdaId: string;
    category: 'fruits' | 'vegetables' | 'grains' | 'proteins' | 'dairy' | 'prepared';
}

export const verifiedFoods: VerifiedFood[] = [
    {
        id: 'apple',
        name: 'Manzana mediana',
        calories: 95,
        serving: '1 manzana (182g)',
        usdaId: '171688',
        category: 'fruits',
    },
    {
        id: 'banana',
        name: 'Banana mediana',
        calories: 105,
        serving: '1 banana (118g)',
        usdaId: '173944',
        category: 'fruits',
    },
    {
        id: 'orange',
        name: 'Naranja mediana',
        calories: 62,
        serving: '1 naranja (154g)',
        usdaId: '169097',
        category: 'fruits',
    },
    {   
        id: 'broccoli',
        name: 'Brócoli cocido',
        calories: 55,
        serving: '1 taza (156g)',
        usdaId: '169967',
        category: 'vegetables',
    },
    {
        id: 'carrot',
        name: 'Zanahoria mediana',
        calories: 25,
        serving: '1 zanahoria (61g)',
        usdaId: '170393',
        category: 'vegetables',
    },
    {   id: 'tomato',
        name: 'Tomate mediano',
        calories: 22,
        serving: '1 tomate (123g)',
        usdaId: '170457',
        category: 'vegetables',
    },
    {   id: 'white_rice',
        name: 'Arroz blanco cocido',
        calories: 205,
        serving: '1 taza (158g)',
        usdaId: '168899',
        category: 'grains',
    },
    {   id: 'oatmeal',
        name: 'Avena cocida',
        calories: 147,
        serving: '1 taza (234g)',
        usdaId: '172874',
        category: 'grains',
    },
    {   id: 'whole_bread',
        name: 'Rebanada de pan integral',
        calories: 80,
        serving: '1 rebanada (28g)',
        usdaId: '172687',
        category: 'grains',
    },
    {   id: 'pasta',
        name: 'Pasta cocida',
        calories: 220,
        serving: '1 taza (140g)',
        usdaId: '168277',
        category: 'grains',
    },
    {   id: 'chicken_breast',
        name: 'Pechuga de pollo a la plancha',
        calories: 165,
        serving: '100g',
        usdaId: '171477',
        category: 'proteins',
    },
    {   id: 'salmon',
        name: 'Salmón a la plancha',
        calories: 208,
        serving: '100g',
        usdaId: '175167',
        category: 'proteins',
    },
    {   id: 'egg',
        name: 'Huevo entero',
        calories: 70,
        serving: '1 huevo (50g)',
        usdaId: '173423',
        category: 'proteins',
    },
    {   id: 'tuna',
        name: 'Atún en agua',
        calories: 154,
        serving: '1 lata (154g)',
        usdaId: '175164',
        category: 'proteins',
    },
    {   id: 'lentils',
        name: 'Lentejas cocidas',
        calories: 230,
        serving: '1 taza (198g)',
        usdaId: '172420',
        category: 'proteins',
    },
    {   id: 'milk',
        name: 'Leche descremada',
        calories: 83,
        serving: '1 vaso (245g)',
        usdaId: '171256',
        category: 'dairy',
    },
    {   id: 'greek_yogurt',
        name: 'Yogur griego natural',
        calories: 100,
        serving: '150g',
        usdaId: '170894',
        category: 'dairy',
    },
    {   id: 'chiken_rice',
        name: 'Arroz con pollo',
        calories: 380,
        serving: '1 plato (250g)',
        usdaId: 'estimated',
        category: 'prepared',
    },
    {   id: 'caesar_salad',
        name: 'Ensalada César',
        calories: 280,
        serving: '1 plato (200g)',
        usdaId: 'estimated',
        category: 'prepared',
    },
    {   id: 'mixed_salad',
        name: 'Ensalada mixta',
        calories: 50,
        serving: '1 plato (150g)',
        usdaId: 'estimated',
        category: 'prepared',
    },
];

export const searchFoodByName = (searchTerm: string): VerifiedFood[] => {
    const term = searchTerm.toLowerCase();
    return verifiedFoods.filter(food => food.name.toLowerCase().includes(term));
};

export const getFoodByCategory = (category: VerifiedFood['category']): VerifiedFood[]=> {
    return verifiedFoods.filter(food => food.category === category);
};
