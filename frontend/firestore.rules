rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {
// Helper functions
function isAuthenticated() {
  return request.auth != null;
}

function isOwner(userId) {
  return isAuthenticated() && request.auth.uid == userId;
}

// Chat sessions
match /chat_sessions/{sessionId} {
  allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
  allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
  allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
  allow delete: if false;
  
  match /messages/{messageId} {
    allow read: if isAuthenticated() && get(/databases/$(database)/documents/chat_sessions/$(sessionId)).data.userId == request.auth.uid;
    allow write: if false;
  }
}

// Chat rate limits
match /chat_rate_limits/{userId} {
  allow read: if isOwner(userId);
  allow write: if false;
}

// Chat context cache
match /chat_context_cache/{userId} {
  allow read: if isOwner(userId);
  allow write: if false;
}

// Chat analytics
match /chat_analytics/{date} {
  allow read: if false;
  allow write: if false;
}

// Users
match /users/{document} {
  allow read: if isAuthenticated();
  allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
  allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
  allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
}

// User Food Entries
match /userFoodEntries/{entryId} {
  allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
  allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
  allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
}

// Food Database
match /foodDatabase/{foodId} {
  allow read: if isAuthenticated();
  allow create: if isAuthenticated();
  allow update: if isAuthenticated();
  allow delete: if false;
}

// Workouts
match /workouts/{workoutId} {
  allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
  allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
  allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
}

// Workout Templates
match /workout_templates/{templateId} {
  allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
  allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
  allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
}

// Denegar todo lo dem√°s
match /{document=**} {
  allow read, write: if false;
}
}
}
